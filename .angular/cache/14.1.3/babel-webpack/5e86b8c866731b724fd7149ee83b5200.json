{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport { FormControl } from '@angular/forms';\nimport { v4 as uuidv4 } from 'uuid';\nimport { map, startWith } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"src/app/shared/services/api.service\";\nimport * as i3 from \"src/app/shared/services/websocket.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/app/shared/services/auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/list\";\nconst _c0 = [\"userInput\"];\n\nfunction NewGameComponent_mat_list_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const jugador_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", jugador_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", jugador_r1.alias, \" \");\n  }\n}\n\nexport class User {\n  constructor(displayName, email, uid, selected) {\n    this.displayName = displayName;\n    this.email = email;\n    this.uid = uid;\n    this.selected = selected;\n    if (selected === undefined) selected = false;\n  }\n\n}\nexport let NewGameComponent = /*#__PURE__*/(() => {\n  class NewGameComponent {\n    constructor(afs, api, ws, router, authService) {\n      this.afs = afs;\n      this.api = api;\n      this.ws = ws;\n      this.router = router;\n      this.authService = authService;\n      this.userControl = new FormControl();\n      this.users = new Array();\n      this.selectedUsers = new Array();\n      this.lastFilter = \"\";\n    }\n\n    ngOnInit() {\n      this.afs.collection(`users`).snapshotChanges().subscribe(actions => {\n        this.users = actions.map(item => {\n          const data = item.payload.doc.data();\n          const selected = this.authService.user.uid === data.uid;\n          const user = new User(data.displayName, data.email, data.uid, selected);\n\n          if (selected) {\n            this.selectedUsers.push(user);\n          }\n\n          return user;\n        });\n        console.log(this.users);\n        this.filteredUsers = this.userControl.valueChanges.pipe(startWith(\"\"), map(value => typeof value === \"string\" ? value : this.lastFilter), map(filter => this.filter(filter)));\n      });\n      this.uuid = uuidv4();\n      this.ws.connect(this.uuid).subscribe({\n        next: event => {\n          if (event.type === 'cargame.juegocreado') {\n            this.router.navigate(['list']);\n          }\n        },\n        error: err => console.log(err),\n        complete: () => console.log('complete')\n      });\n    }\n\n    ngOnDestroy() {\n      this.ws.close();\n    }\n\n    crearJuego() {\n      const jugadores = {};\n      this.selectedUsers.forEach(user => {\n        jugadores[user.uid] = user.displayName;\n      });\n      return this.api.crearJuego({\n        juegoId: this.uuid,\n        jugadores,\n        jugadorPrincipalId: this.authService.userData.uid\n      }).subscribe();\n    }\n\n    filter(filter) {\n      this.lastFilter = filter;\n\n      if (filter) {\n        return this.users.filter(option => {\n          return option.email.toLowerCase().indexOf(filter.toLowerCase()) >= 0 || option.displayName.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n        });\n      } else {\n        return this.users;\n      }\n    }\n\n    displayFn(value) {\n      let displayValue = \"\";\n\n      if (Array.isArray(value)) {\n        value.forEach((user, index) => {\n          if (index === 0) {\n            displayValue = user.displayName + \" [\" + user.email + \"]\";\n          } else {\n            displayValue += \", \" + user.displayName + \" [\" + user.email + \"]\";\n          }\n        });\n      } else {\n        displayValue = value;\n      }\n\n      return displayValue;\n    }\n\n    optionClicked(event, user) {\n      event.stopPropagation();\n      this.toggleSelection(user);\n    }\n\n    toggleSelection(user) {\n      user.selected = !user.selected;\n\n      if (user.selected) {\n        this.selectedUsers.push(user);\n      } else {\n        const i = this.selectedUsers.findIndex(value => value.uid === user.uid);\n        this.selectedUsers.splice(i, 1);\n      }\n\n      this._userInput.nativeElement.focus();\n    }\n\n  }\n\n  NewGameComponent.ɵfac = function NewGameComponent_Factory(t) {\n    return new (t || NewGameComponent)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.WebsocketService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.AuthService));\n  };\n\n  NewGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewGameComponent,\n    selectors: [[\"app-new-game\"]],\n    viewQuery: function NewGameComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userInput = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"formControlName\", \"jugador\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"]],\n    template: function NewGameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Crear Juego\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"mat-selection-list\", 1);\n        i0.ɵɵtemplate(4, NewGameComponent_mat_list_option_4_Template, 2, 2, \"mat-list-option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function NewGameComponent_Template_button_click_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(7, \" Crear Juego \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.jugadores);\n      }\n    },\n    dependencies: [i6.NgForOf, i7.ɵNgNoValidate, i7.NgControlStatus, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.FormControlName, i8.MatButton, i9.MatSelectionList, i9.MatListOption]\n  });\n  return NewGameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}